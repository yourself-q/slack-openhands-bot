const express = require('express');
const config = require('./config');
const OpenHandsSocketClient = require('./openHandsSocketClient');
const SlackWebhook = require('./slack-webhook');

const app = express();
const openHandsClient = new OpenHandsSocketClient();
const slackWebhook = new SlackWebhook();

app.use(express.json());

// „Ç∑„É≥„Éó„É´„Å™Webhook„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà
app.post('/webhook', async (req, res) => {
  const { text, user_name } = req.body;
  
  console.log(`üì© WebhookÂèó‰ø°: ${user_name} - ${text}`);
  
  if (!text || text.trim() === '') {
    res.status(200).send('OK');
    return;
  }

  try {
    // OpenHands„ÅÆÂÅ•Â∫∑„ÉÅ„Çß„ÉÉ„ÇØ
    const healthStatus = await openHandsClient.healthCheck();
    if (!healthStatus) {
      await slackWebhook.sendMessage('Áî≥„ÅóË®≥„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇOpenHands„Çµ„Éº„Éê„Éº„Å´Êé•Á∂ö„Åß„Åç„Åæ„Åõ„Çì„ÄÇ');
      res.status(200).send('OK');
      return;
    }

    // Slack„Å´ÂøúÁ≠î„ÇíÈÄÅ‰ø°„Åô„Çã„Ç≥„Éº„É´„Éê„ÉÉ„ÇØ
    const slackCallback = async (responseMessage) => {
      console.log(`üì§ OpenHands„Åã„Çâ„ÅÆÂøúÁ≠î: ${responseMessage}`);
      await slackWebhook.sendMessage(responseMessage);
    };

    // OpenHands„Å´„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈÄÅ‰ø°
    const threadId = `webhook_${user_name}_${Date.now()}`;
    const response = await openHandsClient.sendMessage(threadId, text, slackCallback);
    
    // ÂàùÊúüÂøúÁ≠î„ÇíSlack„Å´ÈÄÅ‰ø°
    await slackWebhook.sendMessage(`üì§ **ÈÄÅ‰ø°**: "${text}"\n${response.message}`);

  } catch (error) {
    console.error('Error handling webhook:', error);
    await slackWebhook.sendMessage('„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇÂæå„Åß„ÇÇ„ÅÜ‰∏ÄÂ∫¶„ÅäË©¶„Åó„Åè„Å†„Åï„ÅÑ„ÄÇ');
  }

  res.status(200).send('OK');
});

// „Çπ„ÉÜ„Éº„Çø„ÇπÁ¢∫Ë™ç„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà
app.get('/status', async (req, res) => {
  try {
    const healthStatus = await openHandsClient.healthCheck();
    res.json({
      status: 'running',
      openhands: healthStatus ? 'connected' : 'disconnected',
      webhook: config.slack.webhookUrl ? 'configured' : 'not configured'
    });
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

// „Ç¢„Éó„É™Ëµ∑Âãï
(async () => {
  try {
    app.listen(config.slack.port, () => {
      console.log('‚ö°Ô∏è Simple Slack Webhook Bot is running!');
      console.log(`Listening on port ${config.slack.port}`);
      console.log(`Webhook endpoint: http://localhost:${config.slack.port}/webhook`);
    });
    
    // OpenHands„ÅÆÊé•Á∂öÁ¢∫Ë™ç
    const healthStatus = await openHandsClient.healthCheck();
    if (healthStatus) {
      console.log('‚úÖ OpenHands connection verified');
    } else {
      console.log('‚ö†Ô∏è  Warning: Could not connect to OpenHands');
    }

    // Webhook URLÁ¢∫Ë™ç
    if (config.slack.webhookUrl) {
      console.log('‚úÖ Slack Webhook URL configured');
    } else {
      console.log('‚ö†Ô∏è  Warning: SLACK_WEBHOOK_URL not configured');
    }
  } catch (error) {
    console.error('Failed to start the app:', error);
  }
})();